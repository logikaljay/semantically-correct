#!/usr/local/bin/node

var fs = require('fs')
var path = require('path')
var _ = require('semantic-release/node_modules/lodash')
var nopt = require('semantic-release/node_modules/nopt')
var npmconf = require('semantic-release/node_modules/npmconf')
var log = require('semantic-release/node_modules/npmlog')
var env = process.env
var pkg = JSON.parse(fs.readFileSync('./package.json'))

var outputJson = false
if (process.argv.indexOf('-j') > -1 || process.argv.indexOf('--json') > -1) {
    outputJson = true
}

log.heading = 'semantic-release'

var knownOptions = {
  branch: String,
  debug: Boolean,
  'github-token': String,
  'github-url': String,
  'analyze-commits': [path, String],
  'generate-notes': [path, String],
  'verify-conditions': [path, String],
  'verify-release': [path, String]
}
var options = _.defaults(
  _.mapKeys(nopt(knownOptions), function (value, key) {
    return _.camelCase(key)
  }),
  pkg.release,
  {
    branch: 'master',
    fallbackTags: {
      next: 'latest'
    },
    debug: !env.CI,
    githubToken: env.GH_TOKEN || env.GITHUB_TOKEN,
    githubUrl: env.GH_URL
  }
)

var plugins = require('semantic-release/dist/lib/plugins')(options)
npmconf.load({}, function (err, conf) {

    var npm = {
        auth: {
        token: env.NPM_TOKEN
        },
        loglevel: conf.get('loglevel'),
        registry: require('semantic-release/dist/lib/get-registry')(pkg, conf),
        tag: (pkg.publishConfig || {}).tag || conf.get('tag') || 'latest'
    }
    
    var config = {
        env: env,
        pkg: pkg,
        options: options,
        plugins: plugins,
        npm: npm
    }

    getVer(config, (err, ver) => {
        if (outputJson) {
            process.stdout.write(new Buffer(JSON.stringify(ver)))
        }
        else {
            process.stdout.write(new Buffer(ver.version))
        }

        return 0
    })

})

var auto = require('semantic-release/node_modules/run-auto')
var semver = require('semantic-release/node_modules/semver')

var getCommits = require('semantic-release/dist/lib/commits')
var getType = require('semantic-release/dist/lib/type')

var getVer = function (config, cb) {
  var plugins = config.plugins

  auto({
    lastRelease: plugins.getLastRelease.bind(null, config),
    commits: ['lastRelease', function (cb, results) {
      getCommits(_.assign({
        lastRelease: results.lastRelease
      }, config),
      cb)
    }],
    type: ['commits', 'lastRelease', function (cb, results) {
      getType(_.assign({
        commits: results.commits,
        lastRelease: results.lastRelease
      }, config),
      cb)
    }]
  }, function (err, results) {
    if (err) {
        return cb(null, results)
    }
    
    var inc = semver.inc(results.lastRelease.version, results.type)
    var nextRelease = {
      type: results.type,
      version: results.type === 'initial'
        ? '1.0.0'
        : inc
    }
    
    cb(null, nextRelease)

  })
}
